<div className="flex flex-col gap-4">
  <div className="flex flex-col gap-2 items-center justify-center">
    <div className="text-center text-xl"><strong>Testo sopra:</strong> {textAbove}</div>

    {type === EngagementType.QR_CODE && url && (
    <div className="text-center text-2xl">
      <strong>Link:</strong>{" "}
      <a
        href="{url}"
        className="text-blue-600 underline hover:text-blue-500 visited:text-purple-600"
        target="_blank"
        rel="noopener noreferrer"
      >
        {url}
      </a>
    </div>
    )} {type === EngagementType.IMAGE && imageUrl && (
    <Image src="{imageUrl}" alt="Immagine di marketing" width="{200}" height="{200}" />
    )} {type === EngagementType.MESSAGE && message && (
    <div className="text-center text-2xl"><strong>Messaggio:</strong> {message}</div>
    )}

    <div className="text-center text-xl"><strong>Testo sotto:</strong> {textBelow}</div>
  </div>
</div>

<Accordion
        type="multiple"
        className="w-full"
        defaultValue={!isOrderContext ? ["new"] : undefined}
      >
        <AccordionItem value="new">
          <AccordionTrigger>Crea nuovo marketing</AccordionTrigger>
          <AccordionContent className="flex flex-col gap-2"></AccordionContent>
        </AccordionItem>

        {isOrderContext &&
          activeEngagements.map((engagement, index) => {
            const { payload, type } = engagement;
            const { textAbove = "Nessuno", textBelow = "Nessuno" } = payload as CommonPayload;
            const url = (payload as QrPayload)?.url;
            const imageUrl = (payload as ImagePayload)?.imageUrl;
            const message = (payload as MessagePayload)?.message;

            return (
              <AccordionItem key={engagement.id} value={`active-${index}`}>
                <AccordionTrigger>Marketing attivo #{index + 1}</AccordionTrigger>
                <AccordionContent>
                  <div className="flex flex-col gap-4">
                    <div>
                      <strong>Tipo:</strong> {getTemplateName(engagement)}
                    </div>

                    <div className="flex flex-col gap-2 items-center justify-center">
                      <div className="text-center text-xl">
                        <strong>Testo sopra:</strong> {textAbove}
                      </div>

                      {type === EngagementType.QR_CODE && url && (
                        <div className="text-center text-2xl">
                          <strong>Link:</strong>{" "}
                          <a
                            href={url}
                            className="text-blue-600 underline hover:text-blue-500 visited:text-purple-600"
                            target="_blank"
                            rel="noopener noreferrer"
                          >
                            {url}
                          </a>
                        </div>
                      )}

                      {type === EngagementType.IMAGE && imageUrl && (
                        <NextImage
                          src={imageUrl}
                          alt="Immagine di marketing"
                          width={200}
                          height={200}
                        />
                      )}

                      {type === EngagementType.MESSAGE && message && (
                        <div className="text-center text-2xl">
                          <strong>Messaggio:</strong> {message}
                        </div>
                      )}

                      <div className="text-center text-xl">
                        <strong>Testo sotto:</strong> {textBelow}
                      </div>
                    </div>
                  </div>
                </AccordionContent>
              </AccordionItem>
            );
          })}