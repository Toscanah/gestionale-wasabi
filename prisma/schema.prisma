generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum OrderType {
    TABLE
    TO_HOME
    PICK_UP
}

enum PaymentType {
    CASH
    CARD
    VOUCHERS
    OTHER
}

model Address {
    id          Int      @id @default(autoincrement())
    customer_id Int
    street      String
    civic       String
    cap         Int?
    floor       String?
    stair       String?
    street_info String?
    customer    Customer @relation(fields: [customer_id], references: [id])
    order       Order[]
    temporary   Boolean
}

model Order {
    id               Int               @id @default(autoincrement())
    customer_id      Int?
    table_id         Int?
    type             OrderType
    created_at       DateTime          @default(now())
    total            Float?
    notes            String?
    when             String?           @default("immediate")
    address_id       Int?
    customer         Customer?         @relation(fields: [customer_id], references: [id])
    table            Table?            @relation(fields: [table_id], references: [id])
    address          Address?          @relation(fields: [address_id], references: [id])
    products         ProductsOnOrder[]
    paid             Boolean           @default(false)
    contact_phone    Phone?            @relation(fields: [contact_phone_id], references: [id])
    payment          Payment[]
    phones           PhonesOnOrder[]
    contact_phone_id Int?
}

model Customer {
    id        Int       @id @default(autoincrement())
    name      String
    surname   String
    orders    Order[]
    phone     Phone[]
    addresses Address[]
}

model Phone {
    id          Int             @id @default(autoincrement())
    phone       String
    customer_id Int
    customer    Customer        @relation(fields: [customer_id], references: [id])
    orders      PhonesOnOrder[]
    Order       Order[]
}

model Table {
    id     Int     @id @default(autoincrement())
    name   String
    orders Order[]
}

model Product {
    id     Int               @id @default(autoincrement())
    name   String
    code   String
    desc   String
    price  Float
    rice   Float
    orders ProductsOnOrder[]
}

model ProductsOnOrder {
    id         Int     @id @default(autoincrement())
    product    Product @relation(fields: [product_id], references: [id])
    product_id Int
    order      Order   @relation(fields: [order_id], references: [id])
    order_id   Int
    quantity   Int
    total      Float
}

model PhonesOnOrder {
    id       Int   @id @default(autoincrement())
    phone    Phone @relation(fields: [phone_id], references: [id])
    phone_id Int
    order    Order @relation(fields: [order_id], references: [id])
    order_id Int
}

model Payment {
    id        Int         @id @default(autoincrement())
    amount    Float?
    type      PaymentType
    order_id  Int
    order     Order       @relation(fields: [order_id], references: [id])
    create_at DateTime    @default(now())
}

model Admin {
    id       Int    @id @default(autoincrement())
    username String
    password String
}

model Rice {
    id        Int   @id @default(autoincrement())
    amount    Float
    threshold Float

    warning String @default("Attenzione, la soglia Ã¨ stata raggiunta")
}
